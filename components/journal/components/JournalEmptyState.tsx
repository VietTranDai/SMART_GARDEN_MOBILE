import React from 'react';
import {
  View,
  Text,
  TouchableOpacity,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { router } from 'expo-router';
import { useAppTheme } from "@/hooks/ui/useAppTheme";
import { createJournalStyles } from '../styles/journalStyles';

interface JournalEmptyStateProps {
  searchQuery?: string;
  hasFilters?: boolean;
}

export const JournalEmptyState: React.FC<JournalEmptyStateProps> = ({
  searchQuery,
  hasFilters,
}) => {
  const theme = useAppTheme();
  const styles = createJournalStyles(theme);

  const handleCreateActivity = () => {
    router.push('/activity/create' as never);
  };

  const quickStartActivities = [
    { icon: 'water-outline', name: 'T∆∞·ªõi n∆∞·ªõc cho c√¢y', type: 'WATERING' },
    { icon: 'leaf-outline', name: 'B√≥n ph√¢n cho v∆∞·ªùn', type: 'FERTILIZING' },
    { icon: 'trending-up-outline', name: 'Tr·ªìng c√¢y m·ªõi', type: 'PLANTING' },
    { icon: 'cut-outline', name: 'C·∫Øt t·ªâa c√†nh', type: 'PRUNING' },
    { icon: 'basket-outline', name: 'Thu ho·∫°ch s·∫£n ph·∫©m', type: 'HARVESTING' },
  ];

  if (searchQuery) {
    return (
      <View style={styles.emptyContainer}>
        <View style={styles.emptyImageContainer}>
          <Ionicons name="search-outline" size={48} color={theme.textSecondary} />
        </View>
        <Text style={styles.emptyTitle}>Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</Text>
        <Text style={styles.emptyText}>
          Kh√¥ng c√≥ ho·∫°t ƒë·ªông n√†o ph√π h·ª£p v·ªõi t·ª´ kh√≥a &ldquo;{searchQuery}&rdquo;.
          {'\n'}H√£y th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ki·ªÉm tra l·∫°i ch√≠nh t·∫£.
        </Text>
      </View>
    );
  }

  if (hasFilters) {
    return (
      <View style={styles.emptyContainer}>
        <View style={styles.emptyImageContainer}>
          <Ionicons name="filter-outline" size={48} color={theme.textSecondary} />
        </View>
        <Text style={styles.emptyTitle}>Kh√¥ng c√≥ ho·∫°t ƒë·ªông</Text>
        <Text style={styles.emptyText}>
          Kh√¥ng c√≥ ho·∫°t ƒë·ªông n√†o ph√π h·ª£p v·ªõi b·ªô l·ªçc hi·ªán t·∫°i.
          {'\n'}H√£y th·ª≠ ƒëi·ªÅu ch·ªânh b·ªô l·ªçc ho·∫∑c th√™m ho·∫°t ƒë·ªông m·ªõi.
        </Text>
        <TouchableOpacity
          style={styles.emptyButton}
          onPress={handleCreateActivity}
          activeOpacity={0.8}
        >
          <Ionicons name="add" size={18} color="#fff" />
          <Text style={styles.emptyButtonText}>Th√™m ho·∫°t ƒë·ªông m·ªõi</Text>
        </TouchableOpacity>
      </View>
    );
  }

  return (
    <View style={styles.emptyContainer}>
      <View style={styles.emptyImageContainer}>
        <Ionicons name="journal-outline" size={48} color={theme.textSecondary} />
      </View>
      <Text style={styles.emptyTitle}>Nh·∫≠t k√Ω tr·ªëng</Text>
      <Text style={styles.emptyText}>
        B·∫°n ch∆∞a c√≥ ho·∫°t ƒë·ªông n√†o trong v∆∞·ªùn.
        {'\n'}H√£y b·∫Øt ƒë·∫ßu ghi ch√©p nh·ªØng ho·∫°t ƒë·ªông chƒÉm s√≥c c√¢y tr·ªìng c·ªßa b·∫°n!
      </Text>

      {/* Quick start suggestions */}
      <View style={styles.quickStartContainer}>
        <Text style={styles.quickStartTitle}>üí° G·ª£i √Ω ho·∫°t ƒë·ªông ph·ªï bi·∫øn:</Text>
        {quickStartActivities.map((activity, index) => (
          <TouchableOpacity
            key={index}
            style={styles.quickStartItem}
            onPress={handleCreateActivity}
            activeOpacity={0.7}
          >
            <Ionicons 
              name={activity.icon as keyof typeof Ionicons.glyphMap} 
              size={16} 
              color={theme.primary} 
            />
            <Text style={styles.quickStartText}>{activity.name}</Text>
          </TouchableOpacity>
        ))}
      </View>

      <TouchableOpacity
        style={styles.emptyButton}
        onPress={handleCreateActivity}
        activeOpacity={0.8}
      >
        <Ionicons name="add" size={18} color="#fff" />
        <Text style={styles.emptyButtonText}>B·∫Øt ƒë·∫ßu ghi nh·∫≠t k√Ω</Text>
      </TouchableOpacity>
    </View>
  );
}; 